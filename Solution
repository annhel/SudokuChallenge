class Solution {
    public boolean isValidSudoku(char[][] board) {
    
    for (int i = 0; i < 9; i++) {
        boolean[] rowSeen = new boolean[9];
        boolean[] colSeen = new boolean[9];
        for (int j = 0; j < 9; j++) {
            if (board[i][j] != '.' && rowSeen[board[i][j] - '1']) { // rows
                return false;
            }
            rowSeen[board[i][j] - '1'] = true;
           
            if (board[j][i] != '.' && colSeen[board[j][i] - '1']) { // cols
                return false;
            }
            colSeen[board[j][i] - '1'] = true;
        }
    }
    
    // smaller boxes
    for (int i = 0; i < 9; i += 3) {
        for (int j = 0; j < 9; j += 3) {
            boolean[] subSeen = new boolean[9];
            for (int k = i; k < i + 3; k++) {
                for (int l = j; l < j + 3; l++) {
                    if (board[k][l] != '.' && subSeen[board[k][l] - '1']) {
                        return false;
                    }
                    subSeen[board[k][l] - '1'] = true;
                }
            }
        }
    }
    
    return true;
  }
}
